{"version":3,"sources":["redux/actions/actiontypes.js","tools/mockData.js","redux/configurestore.js","components/home/HomePage.js","components/about/AboutPage.js","components/common/Header.js","components/PageNotFound.js","api/apiUtils.js","api/courseApi.js","redux/actions/apiStatusActions.js","redux/actions/courseactions.js","redux/actions/authoractions.js","api/authorApi.js","components/courses/CourseList.js","components/common/Spinner.js","components/courses/CoursesPage.js","components/common/TextInput.js","components/common/SelectInput.js","components/courses/CourseForm.js","components/courses/ManageCoursePage.js","components/App.js","index.js","redux/reducers/initialstate.js","redux/reducers/apiStatusReducer.js","redux/reducers/index.js","redux/reducers/coursereducer.js","redux/reducers/authorReducer.js","redux/configurestore.prod.js"],"names":["LOAD_COURSES_SUCCESS","LOAD_AUTHORS_SUCCESS","CREATE_COURSE_SUCCESS","UPDATE_COURSE_SUCCESS","BEGIN_API_CALL","API_CALL_ERROR","DELETE_COURSE_OPTIMISTIC","module","exports","newCourse","id","title","authorId","category","courses","slug","authors","name","require","HomePage","className","to","AboutPage","Header","activeStyle","color","exact","PageNotFound","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","beginApiCall","type","types","apiCallError","loadCourses","dispatch","fetch","then","catch","loadCourseSuccess","deleteCourse","course","deleteCourseOptimistic","courseId","method","loadAuthors","loadAuthorsSuccess","CourseList","onDeleteClick","map","key","href","authorName","onClick","Spinner","CoursesPage","state","redirectToAddCoursePage","handleDeleteCourse","toast","success","props","actions","message","autoClose","this","length","alert","loading","style","marginBottom","setState","React","Component","connect","find","apiCallsInProgress","bindActionCreators","courseActions","authorActions","TextInput","label","onChange","placeholder","value","wrapperClass","htmlFor","SelectInput","defaultOption","options","option","CourseForm","onSave","saving","errors","onSubmit","role","author","disabled","mapDispatchToProps","saveCourse","getState","headers","body","JSON","stringify","courseApi","savedCourse","updateCourseSuccess","createCourseSuccess","ownProps","match","params","getCourseBySlug","history","useState","setCourse","setErrors","setSaving","useEffect","event","target","prevCourse","parseInt","preventDefault","Object","keys","formIsValid","push","App","path","component","ManageCoursePage","hideProgressBar","store","configureStore","render","document","getElementById","actionTypeEndsInSuccess","substring","rootReducer","combineReducers","initialState","action","filter","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.e06dfec2.chunk.js","sourcesContent":["export const LOAD_COURSES_SUCCESS = \"LOAD_COURSES_SUCCESS\";\r\nexport const LOAD_AUTHORS_SUCCESS = \"LOAD_AUTHORS_SUCCESS\";\r\nexport const CREATE_COURSE_SUCCESS = \"CREATE_COURSE_SUCCESS\";\r\nexport const UPDATE_COURSE_SUCCESS = \"UPDATE_COURSE_SUCCESS\";\r\nexport const BEGIN_API_CALL = \"BEGIN_API_CALL\";\r\nexport const API_CALL_ERROR = \"API_CALL_ERROR\";\r\n\r\n/**\r\n * By convention, actions that end in \"_SUCCESS\" are assumed to have been the result of a completed API call. But since we're doing an optimistic delete, we're hiding loading state.\r\n * So this action name deliberately omits the \"_SUCCESS\" suffix.\r\n * If it had one, our apiCallsInProgress counter would be decremented below zero with that suffix, because we're not incrementing the number of apiCallInProgress when the delete request begins.\r\n */\r\nexport const DELETE_COURSE_OPTIMISTIC = \"DELETE_COURSE_OPTIMISTIC\";","const courses = [\r\n  {\r\n    id: 1,\r\n    title: \"Securing React Apps with Auth0\",\r\n    slug: \"react-auth0-authentication-security\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"React: The Big Picture\",\r\n    slug: \"react-big-picture\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Creating Reusable React Components\",\r\n    slug: \"react-creating-reusable-components\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Building a JavaScript Development Environment\",\r\n    slug: \"javascript-development-environment\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Building Applications with React and Redux\",\r\n    slug: \"react-redux-react-router-es6\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Building Applications in React and Flux\",\r\n    slug: \"react-flux-building-applications\",\r\n    authorId: 1,\r\n    category: \"JavaScript\"\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Clean Code: Writing Code for Humans\",\r\n    slug: \"writing-clean-code-humans\",\r\n    authorId: 1,\r\n    category: \"Software Practices\"\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Architecting Applications for the Real World\",\r\n    slug: \"architecting-applications-dotnet\",\r\n    authorId: 1,\r\n    category: \"Software Architecture\"\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"Becoming an Outlier: Reprogramming the Developer Mind\",\r\n    slug: \"career-reboot-for-developer-mind\",\r\n    authorId: 1,\r\n    category: \"Career\"\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"Web Component Fundamentals\",\r\n    slug: \"web-components-shadow-dom\",\r\n    authorId: 1,\r\n    category: \"HTML5\"\r\n  }\r\n];\r\n\r\nconst authors = [\r\n  { id: 1, name: \"Cory House\" },\r\n  { id: 2, name: \"Scott Allen\" },\r\n  { id: 3, name: \"Dan Wahlin\" }\r\n];\r\n\r\nconst newCourse = {\r\n  id: null,\r\n  title: \"\",\r\n  authorId: null,\r\n  category: \"\"\r\n};\r\n\r\n// Using CommonJS style export so we can consume via Node (without using Babel-node)\r\nmodule.exports = {\r\n  newCourse,\r\n  courses,\r\n  authors\r\n};\r\n","// CommonJS used to dynamically import during build-time.\r\nif (process.env.NODE_ENV === \"production\"){\r\n  module.exports = require(\"./configurestore.prod\");\r\n} else {\r\n  module.exports = require(\"./configurestore.dev\");\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => (\r\n  <div className=\"jumbotron\">\r\n    <h1>FirstReact HomePage</h1>\r\n    <p>\r\n      React makes it painless to create interactive UIs. Design simple views for\r\n      each state in your application, and React will efficiently update and\r\n      render just the right components when your data changes.\r\n    </p>\r\n    <Link to=\"about\" className=\"btn btn-primary btn-lg\">\r\n      Learn More\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <div>\r\n    <h2>About</h2>\r\n    <p>\r\n      This app is made using React.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default AboutPage;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const activeStyle = { color: \"#F15B2A\" };\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" activeStyle={activeStyle} exact>Home</NavLink>{\" | \"}\r\n      <NavLink to=\"/courses\" activeStyle={activeStyle}>Courses</NavLink>{\" | \"}\r\n      <NavLink to=\"/about\" activeStyle={activeStyle}>About</NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst PageNotFound = () => <h1>Oops! Page not found.</h1>;\r\n\r\nexport default PageNotFound;","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = \"http://localhost:3001/courses/\";\r\n\r\nexport function getCourses() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(course)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import * as types from \"./actiontypes\";\r\n\r\n/**\r\n * Action creator for beginApiCall\r\n * @returns {object} Action type.\r\n */\r\nexport function beginApiCall() {\r\n  return {\r\n    type: types.BEGIN_API_CALL\r\n  };\r\n}\r\n\r\n/**\r\n * Action creator for apiCallError.\r\n * @returns {object} Action type.\r\n */\r\nexport function apiCallError(){\r\n  return { type: types.API_CALL_ERROR };\r\n}","import * as types from \"./actiontypes\";\r\nimport * as courseApi from \"../../api/courseApi\";\r\nimport {beginApiCall, apiCallError} from \"./apiStatusActions\";\r\n\r\n/**\r\n * Declares action creator.\r\n * @param {object} courses The chosen payload, the existing courses.\r\n * @return {object} The success action.\r\n */\r\nexport function loadCourseSuccess(courses){\r\n  return {type: types.LOAD_COURSES_SUCCESS, courses};\r\n}\r\n\r\n/**\r\n * Declares action creator.\r\n * @param {object} course The chosen payload, the target course.\r\n * @return {object} The success action.\r\n */\r\nexport function createCourseSuccess(course) {\r\n  return { type: types.CREATE_COURSE_SUCCESS, course };\r\n}\r\n\r\n/**\r\n * Declares action creator.\r\n * @param {object} course The chosen payload, the target course.\r\n * @return {object} The success action.\r\n */\r\nexport function updateCourseSuccess(course){\r\n  return {type: types.UPDATE_COURSE_SUCCESS, course};\r\n}\r\n\r\nexport function deleteCourseOptimistic(course){\r\n  return {type: types.DELETE_COURSE_OPTIMISTIC, course};\r\n}\r\n\r\n/**\r\n * First thunk, every thunk returns function that takes dispatch as arg.\r\n * Redux thunk injects dispatch for us, so calling code looks same for async and sync calls.\r\n * @return {function} \r\n */\r\nexport function loadCourses() {\r\n  return function (dispatch) {\r\n    dispatch(beginApiCall());\r\n    return courseApi.getCourses().then(courses => {\r\n      dispatch(loadCourseSuccess(courses));\r\n    }).catch(error => {\r\n      dispatch(apiCallError(error));\r\n      throw error;\r\n    });\r\n  };\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return function (dispatch, getState) {\r\n    dispatch(beginApiCall());\r\n    return courseApi.saveCourse(course).then(savedCourse => {\r\n      /* If ID exists, update an existing course, else create a new course. */\r\n      course.id\r\n        ? dispatch(updateCourseSuccess(savedCourse))\r\n        : dispatch(createCourseSuccess(savedCourse));\r\n    }).catch(error => {\r\n      dispatch(apiCallError(error));\r\n      throw error;\r\n    });\r\n  };\r\n}\r\n\r\nexport function deleteCourse(course){\r\n  return function (dispatch) {\r\n  /* Doing optimistic delete, so not dispatching begin/end API call actions or apiCallError action as not showing loading status for this.*/\r\n    dispatch(deleteCourseOptimistic(course));\r\n    return courseApi.deleteCourse(course.id);\r\n  };\r\n}","import * as types from \"./actiontypes\";\r\nimport * as authorApi from \"../../api/authorApi\";\r\nimport { beginApiCall, apiCallError } from \"./apiStatusActions\";\r\n\r\n\r\n/**\r\n * Declares action creator.\r\n * @param {object} authors The chosen payload, the existing authors.\r\n * @return {object} The success action.\r\n */\r\nexport function loadAuthorsSuccess(authors){\r\n  return {type: types.LOAD_AUTHORS_SUCCESS, authors};\r\n}\r\n\r\n/**\r\n * Thunk, every thunk returns function that takes dispatch as arg.\r\n * Redux thunk injects dispatch for us, so calling code looks same for async and sync calls.\r\n * Returns a list of authors if successful, \r\n * @return {function} \r\n */\r\nexport function loadAuthors() {\r\n  return function (dispatch) {\r\n    dispatch(beginApiCall());\r\n    return authorApi.getAuthors()\r\n      .then(authors => {\r\n        dispatch(loadAuthorsSuccess(authors));})\r\n      .catch(error => {\r\n        dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = \"http://localhost:3001/authors/\";\r\n\r\nexport function getAuthors() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CourseList = ({ courses, onDeleteClick }) => (\r\n  <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th />\r\n        <th>Title</th>\r\n        <th>Author</th>\r\n        <th>Category</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {courses.map(course => {\r\n        return (\r\n          <tr key={course.id}>\r\n            <td>\r\n              <a\r\n                className=\"btn btn-light\"\r\n                href={\"http://pluralsight.com/courses/\" + course.slug}\r\n              >\r\n                Watch\r\n              </a>\r\n            </td>\r\n            <td>\r\n              <Link to={\"/course/\" + course.slug}>{course.title}</Link>\r\n            </td>\r\n            <td>{course.authorName}</td>\r\n            <td>{course.category}</td>\r\n            <td>\r\n              <button className=\"btn btn-outline-danger\" onClick={() => onDeleteClick(course)}>Delete</button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nCourseList.propTypes = {\r\n  courses: PropTypes.array.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default CourseList;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as courseActions from \"../../redux/actions/courseactions\";\r\nimport * as authorActions from \"../../redux/actions/authoractions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport CourseList from \"./CourseList\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n// Only using a class here for stateful implementation and to learn both syntaces.\r\n\r\n/**\r\n * Creates course page component, utilising courses and authors properties.\r\n */\r\nclass CoursesPage extends React.Component {\r\n  state = {\r\n    redirectToAddCoursePage: false\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { courses, authors, actions} = this.props;\r\n    if (courses.length === 0){\r\n      actions.loadCourses().catch(error => {\r\n        alert(\"Loading courses failed\" + error);\r\n      });\r\n    }\r\n    if(authors.length === 0){\r\n      actions.loadAuthors().catch(error => {\r\n        alert(\"Loading authors failed\" + error);\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDeleteCourse = async course => {\r\n    toast.success(\"Course deleted\");\r\n    try {\r\n      await this.props.actions.deleteCourse(course);\r\n    }\r\n    catch(error) {\r\n      toast.error(\"Delete failed.\" + error.message, {autoClose:false});\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.redirectToAddCoursePage && <Redirect to=\"/course\" />}\r\n        <h2>Courses</h2>\r\n        {this.props.loading ?\r\n          <Spinner /> : (\r\n            <>\r\n              <button \r\n                style={{marginBottom:20}}\r\n                className=\"btn btn-primary add-course\"\r\n                onClick={() => this.setState({ redirectToAddCoursePage:true })}>\r\n          Add Course\r\n              </button>\r\n              <CourseList onDeleteClick={this.handleDeleteCourse} courses={this.props.courses} />\r\n            </>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n  \r\n\r\nCoursesPage.propTypes = {\r\n  authors: PropTypes.array.isRequired,\r\n  course: PropTypes.array.isRequired,\r\n  actions: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\n/**\r\n * Determines what part of the state we expose to the component.\r\n * Requests only the data that the component needs.\r\n * For each course, return existing course, adding author name property to object.\r\n * Length is checked to ensure both course and author data are available before mapping (using ternary operator.)\r\n * @param {object} state The property of the component.\r\n * @returns {object} The courses props.\r\n */\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    courses: state.authors.length === 0 ? [] : state.courses.map(course => {\r\n      return {\r\n        ...course,\r\n        authorName: state.authors.find(a=> a.id === course.authorId).name\r\n      };\r\n    }),\r\n    authors:state.authors,\r\n    loading: state.apiCallsInProgress > 0\r\n  };\r\n};\r\n\r\n/**\r\n * Determines what actions are available to the component.\r\n * New actions can be passed to allow component to make new requests.\r\n * bindActionCreators converts an object with action creators as values into an on object with each action creator wrapped into a dispatch call.\r\n * @param {function} dispatch A function of the Redux store, called to dispatch an action and trigger a state change, interaction with the store is only ever available with connect.\r\n * @returns {function} Dispatches an action.\r\n */\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      loadCourses:bindActionCreators(courseActions.loadCourses, dispatch),\r\n      loadAuthors:bindActionCreators(authorActions.loadAuthors, dispatch),\r\n      deleteCourse:bindActionCreators(courseActions.deleteCourse, dispatch)\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesPage);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInput = ({ name, label, onChange, placeholder, value, error }) => {\r\n  let wrapperClass = \"form-group\";\r\n  if (error && error.length > 0) {\r\n    wrapperClass += \" \" + \"has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          type=\"text\"\r\n          name={name}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectInput = ({\r\n  name,\r\n  label,\r\n  onChange,\r\n  defaultOption,\r\n  value,\r\n  error,\r\n  options\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className=\"field\">\r\n        {/* Note, value is set here rather than on the option - docs: https://facebook.github.io/react/docs/forms.html */}\r\n        <select\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          className=\"form-control\"\r\n        >\r\n          {/* Accepts an array of options that are mapped over. */}\r\n          <option value=\"\">{defaultOption}</option>\r\n          {options.map(option => {\r\n            return (\r\n              <option key={option.value} value={option.value}>\r\n                {option.text}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  defaultOption: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  error: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport SelectInput from \"../common/SelectInput\";\r\n\r\n//Destructuring props\r\nconst CourseForm = ({\r\n  course,\r\n  authors,\r\n  onSave,\r\n  onChange,\r\n  saving = false,\r\n  errors = {}\r\n}) => {\r\n  return (\r\n    <form onSubmit={onSave}>\r\n      {/** If course ID exists, header shows Edit, else it shows Add. */}\r\n      <h2>{course.id ? \"Edit\" : \"Add\"} Course</h2>\r\n      {/** Short-circuit evaluation, if statement. */}\r\n      {errors.onSave && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {errors.onSave}\r\n        </div>\r\n      )}\r\n      <TextInput\r\n        name=\"title\"\r\n        label=\"Title\"\r\n        value={course.title}\r\n        onChange={onChange}\r\n        error={errors.title}\r\n      />\r\n\r\n      <SelectInput\r\n        name=\"authorId\"\r\n        label=\"Author\"\r\n        value={course.authorId || \"\"}\r\n        defaultOption=\"Select Author\"\r\n        options={authors.map(author => ({\r\n          value: author.id,\r\n          text: author.name\r\n        }))}\r\n        onChange={onChange}\r\n        error={errors.author}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"category\"\r\n        label=\"Category\"\r\n        value={course.category}\r\n        onChange={onChange}\r\n        error={errors.category}\r\n      />\r\n\r\n      <button type=\"submit\" disabled={saving} className=\"btn btn-primary\">\r\n        \r\n        {saving ? \"Saving...\" : \"Save\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nCourseForm.propTypes = {\r\n  authors: PropTypes.array.isRequired,\r\n  course: PropTypes.object.isRequired,\r\n  errors: PropTypes.object,\r\n  onSave: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  saving: PropTypes.bool\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useEffect , useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadCourses, saveCourse } from \"../../redux/actions/courseactions\";\r\nimport { loadAuthors } from \"../../redux/actions/authoractions\";\r\nimport PropTypes from \"prop-types\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport { newCourse } from \"../../tools/mockData\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * Creates course page component, utilising courses and authors properties.\r\n * \r\n * Calling saveCourse in component will call saveCourse func now bound to dispatch in mapDispatchToProps.\r\n * Use rest operator to assign any properties not destructured to props with \"...props\".\r\n * useState returns pair of values, array destructuring is used to assign each value a name.\r\n * The first value is the state variable, the second is the setter func for that variable.\r\n * useState initialises course state variable to a copy of the course passed by props.\r\n * \r\n * useEffect replaces componentDidMount, allows handling of side-effects.\r\n */\r\nexport function ManageCoursePage({\r\n  courses,\r\n  authors,\r\n  loadAuthors,\r\n  loadCourses,\r\n  saveCourse,\r\n  history,\r\n  ...props\r\n}) {\r\n  const [course, setCourse] = useState({...props.course});\r\n  const [errors, setErrors] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  useEffect( () => {\r\n    if (courses.length === 0){\r\n      loadCourses().catch(error => {\r\n        alert(\"Loading courses failed\" + error);\r\n      });\r\n    } else\r\n    /* Copy the course passed in on props to state when an existing ourse is passed in. */\r\n    {\r\n      setCourse({...props.course });\r\n    }\r\n    if(authors.length === 0){\r\n      loadAuthors().catch(error => {\r\n        alert(\"Loading authors failed\" + error);\r\n      });\r\n    }\r\n  }, [authors.length, courses.length, loadAuthors, loadCourses, props.course]);\r\n\r\n  function handleChange(event) {\r\n    /* Destructure avoids even being garbage collected & shortens refs below. */\r\n    const { name, value } = event.target;\r\n    setCourse( prevCourse => ({\r\n      /* Using javascript's computed property syntax */\r\n      ...prevCourse,\r\n      [name]: name === \"authorId\" ? parseInt(value, 10) : value\r\n    }));\r\n  }\r\n\r\n  function formIsValid() {\r\n    const { title, authorId, category } = course;\r\n    const errors = {};\r\n\r\n    if (!title) errors.title = \"Title is required\";\r\n    if (!authorId) errors.author = \"Author is required\";\r\n    if (!category) errors.category = \"Category is required\";\r\n\r\n    setErrors(errors);\r\n    // Form is valid if errors object still has no properties.\r\n    return Object.keys(errors).length === 0;\r\n  }\r\n\r\n  function handleSave(event){\r\n    event.preventDefault();\r\n    if (!formIsValid()) return;\r\n    setSaving(true);\r\n    saveCourse(course).then (() => {\r\n      toast.success(\"Course saved\");\r\n      history.push(\"/courses\");\r\n    }).catch(error => {\r\n      setSaving(false);\r\n      setErrors({ onSave: error.message });\r\n    });\r\n  }\r\n\r\n  /* Change handler passed in on props.\r\n  The variables stated below are all passed to CourseForm*/\r\n  return authors.length === 0 || courses.length === 0 ? (<Spinner/>) :\r\n    (<CourseForm course={course} errors={errors} authors={authors} onChange={handleChange} onSave={handleSave} saving={saving} />);\r\n}\r\n  \r\n\r\nManageCoursePage.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  authors: PropTypes.array.isRequired,\r\n  courses: PropTypes.array.isRequired,\r\n  loadCourses: PropTypes.func.isRequired,\r\n  loadAuthors: PropTypes.func.isRequired,\r\n  saveCourse: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\n/**\r\n * This is an example of a \"selector\"\" as it selects data from the Redux store.\r\n * @param {object} courses List of all courses.\r\n * @param {string} slug Identifying string.\r\n * @returns {object} The matching course or null if not found.\r\n */\r\nexport function getCourseBySlug(courses, slug){\r\n  return courses.find(course => course.slug === slug) || null;\r\n}\r\n\r\n/**\r\n * Determines what part of the state we expose to the component.\r\n * Requests only the data that the component needs.\r\n * \r\n * If slug exists then get course identified by slug, else create new course.\r\n * For each course, return existing course, adding author name property to object.\r\n * @param {object} state The property of the component.\r\n * @param {object} ownProps Used if component requires data from its own props to retrieve data from store.\r\n * @returns {object} The courses props.\r\n */\r\nfunction mapStateToProps(state, ownProps) {\r\n  const slug = ownProps.match.params.slug;\r\n  const course = slug && state.courses.length > 0\r\n    ? getCourseBySlug(state.courses, slug)\r\n    : newCourse;\r\n  return {\r\n    course,\r\n    courses:state.courses,\r\n    authors:state.authors\r\n  };\r\n};\r\n\r\n/**\r\n * Determines what actions are available to the component.\r\n * New actions can be passed to allow component to make new requests.\r\n * bindActionCreators converts an object with action creators as values into an on object with each action creator wrapped into a dispatch call.\r\n * Function scope of included variables takes precendence over module scope of identically named variables.\r\n */\r\nconst mapDispatchToProps = {\r\n  loadCourses,\r\n  loadAuthors,\r\n  saveCourse\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageCoursePage);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from \"./home/HomePage\";\r\nimport AboutPage from \"./about/AboutPage\";\r\nimport Header from \"./common/Header\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport CoursesPage from \"./courses/CoursesPage\";\r\nimport ManageCoursePage from \"./courses/ManageCoursePage\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path={[\"/\", \"/ReactReduxIntroduction/\"]} component={HomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/courses\" component={CoursesPage} />\r\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\r\n        <Route path=\"/course\" component={ManageCoursePage} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nimport configureStore from \"./redux/configurestore\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\n\r\nconst store = configureStore();\r\n\r\nrender(\r\n  <ReduxProvider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </ReduxProvider>,\r\n  document.getElementById(\"app\")\r\n);\r\n","export default {\r\n  courses: [],\r\n  authors: [],\r\n  apiCallsInProgress: 0,\r\n};","import * as types from \"../actions/actiontypes\";\r\nimport initialState from \"./initialstate\";\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n  return type.substring(type.length -8) === \"_SUCCESS\";\r\n}\r\n\r\n/**\r\n * Increments state by one on new API call.\r\n * @param {object} state Initial state.\r\n * @param {object} action The specific action.\r\n * @returns {object} New state.\r\n */\r\nexport default function apiCallStatusReducer(\r\n  state = initialState.apiCallsInProgress,\r\n  action\r\n) {\r\n  if (action.type === types.BEGIN_API_CALL){\r\n    return state + 1;\r\n  } else if (action.type === types.API_CALL_ERROR || actionTypeEndsInSuccess(action.type)) {\r\n    return state - 1;\r\n  }\r\n\r\n  return state;\r\n}","import { combineReducers } from \"redux\";\r\nimport courses from \"./coursereducer\";\r\nimport authors from\"./authorReducer\";\r\nimport apiCallsInProgress from \"./apiStatusReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  courses,\r\n  authors,\r\n  apiCallsInProgress\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actiontypes\";\r\nimport initialState from \"./initialstate\";\r\n\r\n/**\r\n * Updates the redux store by adding the new action passed in action.course to store.\r\n * Whatever is returned from the reducer becomes the new state for that reducer.\r\n * If the reducer receives an action that it doesn't care about, it should return the unchanged state.\r\n * @param {array} state The properties of a component.\r\n * @param {object} action The payload of information sent from data from application the store.\r\n * @returns {object} The updated state.\r\n */\r\nexport default function courseReducer(state = initialState.courses, action) {\r\n  switch (action.type) {\r\n  case types.CREATE_COURSE_SUCCESS:\r\n    return [...state, { ...action.course }];\r\n  /* Maps over the courses to return new array, the element is replaced with matching course.id\r\n  When the course is found with the id that has changed */\r\n  case types.UPDATE_COURSE_SUCCESS:\r\n    return state.map(course => course.id === action.course.id ? action.course : course);\r\n  case types.LOAD_COURSES_SUCCESS:\r\n    return action.courses;\r\n  case types.DELETE_COURSE_OPTIMISTIC:\r\n    return state.filter(course => course.id !== action.course.id);\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actiontypes\";\r\nimport initialState from \"./initialstate\";\r\n/**\r\n * Updates the redux store by adding the new action passed in action.course to store.\r\n * Whatever is returned from the reducer becomes the new state for that reducer.\r\n * If the reducer receives an action that it doesn't care about, it should return the unchanged state.\r\n * @param {array} state The properties of a component.\r\n * @param {object} action The payload of information sent from data from application the store.\r\n * @returns {object} The updated state.\r\n */\r\nexport default function authorReducer(state = initialState.authors, action) {\r\n  switch (action.type) {\r\n  case types.LOAD_AUTHORS_SUCCESS:\r\n    return action.authors;\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n/**\r\n * Configures the redux store.\r\n * Adds support for Redux dev tools, allowing interaction with Redux store in the browser.\r\n * @param {object} initialState The initial state of the Redux store.\r\n * @returns {object} The updated store state.\r\n */\r\nexport default function configureStore(initialState) {\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n  );\r\n}\r\n"],"sourceRoot":""}